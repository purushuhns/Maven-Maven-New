<?xml version="1.0" encoding="UTF-8"?><ProxyEndpoint name="default">
    <Description/>
    <FaultRules>
        <FaultRule name="JSFaultHandler">
            <Step>
                <Name>JS.FaultHandler</Name>
            </Step>
        </FaultRule>
    </FaultRules>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>VAK.VerifyAPIKey</Name>
            </Step>
            <Step>
                <Name>SA.SpikeArrest</Name>
            </Step>
            <Step>
                <Name>QU.SetQuota</Name>
            </Step>
            <Step>
                <Name>RF.SiteKeyNotFound</Name>
                <Condition>(verifyapikey.VAK.VerifyAPIKey.X-AIG-DSUSiteKey = "") or (verifyapikey.VAK.VerifyAPIKey.X-AIG-DSUSiteKey = null)</Condition>
            </Step>
            <Step>
                <Name>EV.ExtractGenericAttributes</Name>
            </Step>
            <Step>
                <Name>AM.GenericAssignVariables</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <Flows>
        <Flow name="UsersPost">
            <Description/>
            <Request>
                <Step>
                    <Name>RF.FaultInvalidparameters</Name>
                    <Condition>(request.content = "" or request.content = null)</Condition>
                </Step>
                <Step>
                    <Name>RF.FaultInvalidContentType</Name>
                    <Condition>(contentFormat != "application/json")</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/users") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="UsersResetQuestionPatch">
            <Description>Users Reset Question Patch</Description>
            <Request>
                <Step>
                    <Name>OA.VerifyToken</Name>
                </Step>
                <Step>
                    <Name>RF.InvalidClientIP</Name>
                    <Condition>(clientIp !=  accesstoken.clientIP)</Condition>
                </Step>
                <Step>
                    <Name>AM.SetDSUProtectedHeaders</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/users/reset_question") and (request.verb = "PATCH")</Condition>
        </Flow>
        <Flow name="UsersPatch">
            <Description>Users Patch</Description>
            <Request>
                <Step>
                    <Name>RF.FaultInvalidparameters</Name>
                    <Condition>(request.content = "" or request.content = null)</Condition>
                </Step>
                <Step>
                    <Name>RF.FaultInvalidContentType</Name>
                    <Condition>(contentFormat != "application/json")</Condition>
                </Step>
                <Step>
                    <Name>OA.VerifyToken</Name>
                </Step>
                <Step>
                    <Name>RF.InvalidClientIP</Name>
                    <Condition>(clientIp !=  accesstoken.clientIP)</Condition>
                </Step>
                <Step>
                    <Name>AM.SetDSUProtectedHeaders</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/users") and (request.verb = "PATCH")</Condition>
        </Flow>
        <Flow name="VerificationsPost">
            <Description/>
            <Request>
                <Step>
                    <Name>RF.FaultInvalidparameters</Name>
                    <Condition>(request.content = "" or request.content = null)</Condition>
                </Step>
                <Step>
                    <Name>RF.FaultInvalidContentType</Name>
                    <Condition>(contentFormat != "application/json")</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/verifications") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="VerificationsGet">
            <Description/>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/verifications/*/{verification_token}") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="FactorsPost">
            <Description/>
            <Request>
                <Step>
                    <Name>RF.FaultInvalidparameters</Name>
                    <Condition>(request.content = "" or request.content = null)</Condition>
                </Step>
                <Step>
                    <Name>RF.FaultInvalidContentType</Name>
                    <Condition>(contentFormat != "application/json")</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/factors") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="PasswordDelete">
            <Description/>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/password/{id}") and (request.verb = "DELETE")</Condition>
        </Flow>
        <Flow name="ChallengeQuestionsGet">
            <Description/>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/challenge-questions") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="ChallengesPost">
            <Description/>
            <Request>
                <Step>
                    <Name>RF.FaultInvalidparameters</Name>
                    <Condition>(request.content = "" or request.content = null)</Condition>
                </Step>
                <Step>
                    <Name>RF.FaultInvalidContentType</Name>
                    <Condition>(contentFormat != "application/json")</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/challenges") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="ChallengesPatch">
            <Description/>
            <Request>
                <Step>
                    <Name>RF.FaultInvalidparameters</Name>
                    <Condition>(request.content = "" or request.content = null)</Condition>
                </Step>
                <Step>
                    <Name>RF.FaultInvalidContentType</Name>
                    <Condition>(contentFormat != "application/json")</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/challenges") and (request.verb = "PATCH")</Condition>
        </Flow>
        <Flow name="PasswordPut">
            <Description/>
            <Request>
                <Step>
                    <Name>RF.FaultInvalidparameters</Name>
                    <Condition>(request.content = "" or request.content = null)</Condition>
                </Step>
                <Step>
                    <Name>RF.FaultInvalidContentType</Name>
                    <Condition>(contentFormat != "application/json")</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/password") and (request.verb = "PUT")</Condition>
        </Flow>
        <Flow name="PasswordPost">
            <Description>PasswordPost</Description>
            <Request>
                <Step>
                    <Name>RF.FaultInvalidparameters</Name>
                    <Condition>(request.content = "" or request.content = null)</Condition>
                </Step>
                <Step>
                    <Name>RF.FaultInvalidContentType</Name>
                    <Condition>(contentFormat != "application/json")</Condition>
                </Step>
                <Step>
                    <Name>OA.VerifyToken</Name>
                </Step>
                <Step>
                    <Name>RF.InvalidClientIP</Name>
                    <Condition>(clientIp !=  accesstoken.clientIP)</Condition>
                </Step>
                <Step>
                    <Name>AM.SetDSUProtectedHeaders</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/password") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="SessionsPost">
            <Description>SessionsPost</Description>
            <Request>
                <Step>
                    <Name>RF.FaultInvalidContentType</Name>
                    <Condition>(contentFormat != "application/json")</Condition>
                </Step>
                <Step>
                    <Name>RF.FaultInvalidparameters</Name>
                    <Condition>(request.content == "" or request.content == null)</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/sessions") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="TokenPost">
            <Description/>
            <Request>
                <Step>
                    <Name>RF.InvalidGrantType</Name>
                    <Condition>(request.formparam.grant_type != "password")</Condition>
                </Step>
                <Step>
                    <Name>JS.ExtractTokenRequestVariables</Name>
                </Step>
                <Step>
                    <Name>OA.VerifyKeySecret</Name>
                </Step>
                <Step>
                    <Name>AM.ConstructDSUSessionPostRequest</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>JS.ExtractDSUTokenVariables</Name>
                </Step>
                <Step>
                    <Name>OA.GenerateAccessToken</Name>
                </Step>
                <Step>
                    <Name>JS.ConstructTokenResponse</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/token") and (request.verb = "POST") </Condition>
        </Flow>
        <Flow name="TokenDelete">
            <Description/>
            <Request>
                <Step>
                    <Name>OA.InvalidateAccessToken</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>AM.ConstructInvalidateTokenResponse</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/token") and (request.verb = "DELETE")</Condition>
        </Flow>
        <Flow name="RefreshTokenPost">
            <Description>RefreshTokenPost</Description>
            <Request>
                <Step>
                    <Name>RF.InvalidGrantType</Name>
                    <Condition>(request.formparam.grant_type != "refresh_token")</Condition>
                </Step>
                <Step>
                    <Name>GOA.GetOAuthAttributes</Name>
                </Step>
                <Step>
                    <Name>RF.InvalidClientIP</Name>
                    <Condition>(clientIp !=  oauthv2accesstoken.GOA.GetOAuthAttributes.accesstoken.clientIP)</Condition>
                </Step>
                <Step>
                    <Name>OA.AccessTokenRefresh</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>RF.RefreshTokenExpired</Name>
                    <Condition>(oauthV2.OA.AccessTokenRefresh.failed = "true")</Condition>
                </Step>
                <Step>
                    <Name>JS.ConstructTokenResponse</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/refreshtoken") and (request.verb = "POST") </Condition>
        </Flow>
        <Flow name="ValidateTokenPost">
            <Description/>
            <Request>
                <Step>
                    <Name>OA.VerifyToken</Name>
                </Step>
                <Step>
                    <Name>RF.InvalidClientIP</Name>
                    <Condition>(clientIp !=  accesstoken.clientIP)</Condition>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>AM.ConstructValidateTokenResponse</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/validatetoken") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="UnknownResource">
            <Description>UnknownResource</Description>
            <Request>
                <Step>
                    <Name>RF.UnknownResource</Name>
                </Step>
            </Request>
            <Response/>
            <Condition/>
        </Flow>
    </Flows>
    <HTTPProxyConnection>
        <BasePath>/ssp/dsu/v1</BasePath>
        <Properties/>
        <VirtualHost>default</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="noTarget">
        <Condition>(proxy.pathsuffix MatchesPath "/validatetoken") or  ((proxy.pathsuffix MatchesPath "/token") and (request.verb = "DELETE"))</Condition>
        <!-- no target endpoint -->
    </RouteRule>
    <RouteRule name="default">
        <TargetEndpoint>default</TargetEndpoint>
        <!--Condition>request.queryparam.appenv = null</Condition-->
    </RouteRule>
</ProxyEndpoint>