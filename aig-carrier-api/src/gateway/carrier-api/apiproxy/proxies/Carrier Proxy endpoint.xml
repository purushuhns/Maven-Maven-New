<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="Carrier Proxy endpoint">
    <Description/>
    <FaultRules>
        <FaultRule name="unauthorized_error">
            <Step>
                <Name>JS.FaultHandler</Name>
            </Step>
        </FaultRule>
    </FaultRules>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>VAK.VerifyApiKey</Name>
            </Step>
            <Step>
                <Name>SA.SetRateLimit</Name>
            </Step>
            <Step>
                <Name>QU.ImposeQuota</Name>
            </Step>
            <Step>
                <Name>EV.ExtractParameters</Name>
            </Step>
            <Step>
                <Name>RF.ParametersNotFound</Name>
                <Condition>isoCountryCode = null or isoCountryCode = ""</Condition>
            </Step>
            <Step>
                <Name>KVM.GetDefaultTarget</Name>
                <Condition>(appenv = null or appenv = "")</Condition>
            </Step>
            <Step>
                <Name>KVM.GetTargetUrl</Name>
                <Condition>(appenv != null and appenv != "")</Condition>
            </Step>
            <Step>
                <Name>RF.IncorrectEnvironment</Name>
                <Condition>(appenv != null and appenv != "") and (url = null or url = "")</Condition>
            </Step>
            <Step>
                <Name>AM.RemoveParameters</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <Flows>
        <!--Flow name="GetCarrierAirlineList">
            <Description/>
            <Request>
                <Step>
                    <Name>AM.CarrierAirlineList</Name>
                </Step>
            </Request>
            <Response>
            <Condition>(proxy.pathsuffix MatchesPath "/carriers/action/types/{id}") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetCarrierTypes">
            <Description/>
            <Request>
                <Step>
                    <Name>AM.CarrierTypes</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/carriers/types/{id}") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetSimpleCarrierList">
            <Description/>
            <Request>
                <Step>
                    <Name>AM.SimpleCarrierList</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/carriers/list") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetSimpleActionsList">
            <Description/>
            <Request>
                <Step>
                    <Name>AM.SimpleActionsList</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/carriers/actions/list") and (request.verb = "GET")</Condition>
        </Flow-->
        <Flow name="GetCarrierAirlineList">
            <Description/>
            <Request>
                <Step>
                    <Name>AM.CarrierAirlineListRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/airlines") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GeCarrierStrikeList">
            <Description/>
            <Request>
                <Step>
                    <Name>AM.CarrierStrikeListRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/strikes") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetCarrierCruiseLineList">
            <Description/>
            <Request>
                <Step>
                    <Name>AM.CarrierCruiseLineListRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/cruiselines") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetCarrierCarRentalsList">
            <Description/>
            <Request>
                <Step>
                    <Name>AM.CarrierCarRentalsListRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/carrentals") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetCarrierTourOperatorsList">
            <Description/>
            <Request>
                <Step>
                    <Name>AM.CarrierTourOperatorsListRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/touroperators") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetFinancialDefault">
            <Description/>
            <Request>
                <Step>
                    <Name>AM.CarrierFinancialDefaultRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/financialdefaults") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="GetCarrierNoCoverage">
            <Description/>
            <Request>
                <Step>
                    <Name>AM.CarrierNoCoverageRequest</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/nocoverages") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="UnknownResource">
            <Description>Unknown Resource</Description>
            <Request>
                <Step>
                    <Name>RF.UnknownResource</Name>
                </Step>
            </Request>
            <Response/>
            <Condition/>
        </Flow>
    </Flows>
    <HTTPProxyConnection>
        <BasePath>/carrier/v1</BasePath>
        <Properties/>
        <VirtualHost>default</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="default">
        <TargetEndpoint>Carrier Target endpoint</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>